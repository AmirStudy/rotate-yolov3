##  特点：去掉3*3特征图
##       多分支共享参数
##       heavyhead预测

##  结论：训练速度大幅提高；
##       检测速度从40+FPS下降到30+FPS；
##       从class agnostic预测结果来看似乎总体效果没有提升
##       可以FPN主分支预测，用少量的精度损失来提速
[net]
# Testing
#batch=1
#subdivisions=1
# Training
batch=16
subdivisions=1
width=416
height=416
channels=3
momentum=0.9
decay=0.0005
angle=0
saturation = 1.5
exposure = 1.5
hue=.1

learning_rate=0.001
burn_in=1000
max_batches = 500200
policy=steps
steps=400000,450000
scales=.1,.1

[convolutional]
batch_normalize=1
filters=32
size=3
stride=1
pad=1
activation=leaky

# Downsample

[convolutional]
batch_normalize=1
filters=64
size=3
stride=2
pad=1
activation=leaky

[convolutional]
batch_normalize=1
filters=32
size=1
stride=1
pad=1
activation=leaky

[convolutional]
batch_normalize=1
filters=64
size=3
stride=1
pad=1
activation=leaky

[shortcut]
from=-3
activation=linear

# Downsample

[convolutional]
batch_normalize=1
filters=128
size=3
stride=2
pad=1
activation=leaky

[convolutional]
batch_normalize=1
filters=64
size=1
stride=1
pad=1
activation=leaky

[convolutional]
batch_normalize=1
filters=128
size=3
stride=1
pad=1
activation=leaky

[shortcut]
from=-3
activation=linear

[convolutional]
batch_normalize=1
filters=64
size=1
stride=1
pad=1
activation=leaky

[convolutional]
batch_normalize=1
filters=128
size=3
stride=1
pad=1
activation=leaky

[shortcut]
from=-3
activation=linear

# Downsample

[convolutional]
batch_normalize=1
filters=256
size=3
stride=2
pad=1
activation=leaky

[convolutional]
batch_normalize=1
filters=128
size=1
stride=1
pad=1
activation=leaky

[convolutional]
batch_normalize=1
filters=256
size=3
stride=1
pad=1
activation=leaky

[shortcut]
from=-3
activation=linear

[convolutional]
batch_normalize=1
filters=128
size=1
stride=1
pad=1
activation=leaky

[convolutional]
batch_normalize=1
filters=256
size=3
stride=1
pad=1
activation=leaky

[shortcut]
from=-3
activation=linear

[convolutional]
batch_normalize=1
filters=128
size=1
stride=1
pad=1
activation=leaky

[convolutional]
batch_normalize=1
filters=256
size=3
stride=1
pad=1
activation=leaky

[shortcut]
from=-3
activation=linear

[convolutional]
batch_normalize=1
filters=128
size=1
stride=1
pad=1
activation=leaky

[convolutional]
batch_normalize=1
filters=256
size=3
stride=1
pad=1
activation=leaky

[shortcut]
from=-3
activation=linear


[convolutional]
batch_normalize=1
filters=128
size=1
stride=1
pad=1
activation=leaky

[convolutional]
batch_normalize=1
filters=256
size=3
stride=1
pad=1
activation=leaky

[shortcut]
from=-3
activation=linear

[convolutional]
batch_normalize=1
filters=128
size=1
stride=1
pad=1
activation=leaky

[convolutional]
batch_normalize=1
filters=256
size=3
stride=1
pad=1
activation=leaky

[shortcut]
from=-3
activation=linear

[convolutional]
batch_normalize=1
filters=128
size=1
stride=1
pad=1
activation=leaky

[convolutional]
batch_normalize=1
filters=256
size=3
stride=1
pad=1
activation=leaky

[shortcut]
from=-3
activation=linear

[convolutional]
batch_normalize=1
filters=128
size=1
stride=1
pad=1
activation=leaky

[convolutional]
batch_normalize=1
filters=256
size=3
stride=1
pad=1
activation=leaky

[shortcut]
from=-3
activation=linear

# Downsample

[convolutional]
batch_normalize=1
filters=512
size=3
stride=2
pad=1
activation=leaky

[convolutional]
batch_normalize=1
filters=256
size=1
stride=1
pad=1
activation=leaky

[convolutional]
batch_normalize=1
filters=512
size=3
stride=1
pad=1
activation=leaky

[shortcut]
from=-3
activation=linear


[convolutional]
batch_normalize=1
filters=256
size=1
stride=1
pad=1
activation=leaky

[convolutional]
batch_normalize=1
filters=512
size=3
stride=1
pad=1
activation=leaky

[shortcut]
from=-3
activation=linear


[convolutional]
batch_normalize=1
filters=256
size=1
stride=1
pad=1
activation=leaky

[convolutional]
batch_normalize=1
filters=512
size=3
stride=1
pad=1
activation=leaky

[shortcut]
from=-3
activation=linear


[convolutional]
batch_normalize=1
filters=256
size=1
stride=1
pad=1
activation=leaky

[convolutional]
batch_normalize=1
filters=512
size=3
stride=1
pad=1
activation=leaky

[shortcut]
from=-3
activation=linear

[convolutional]
batch_normalize=1
filters=256
size=1
stride=1
pad=1
activation=leaky

[convolutional]
batch_normalize=1
filters=512
size=3
stride=1
pad=1
activation=leaky

[shortcut]
from=-3
activation=linear


[convolutional]
batch_normalize=1
filters=256
size=1
stride=1
pad=1
activation=leaky

[convolutional]
batch_normalize=1
filters=512
size=3
stride=1
pad=1
activation=leaky

[shortcut]
from=-3
activation=linear


[convolutional]
batch_normalize=1
filters=256
size=1
stride=1
pad=1
activation=leaky

[convolutional]
batch_normalize=1
filters=512
size=3
stride=1
pad=1
activation=leaky

[shortcut]
from=-3
activation=linear

[convolutional]
batch_normalize=1
filters=256
size=1
stride=1
pad=1
activation=leaky

[convolutional]
batch_normalize=1
filters=512
size=3
stride=1
pad=1
activation=leaky

[shortcut]
from=-3
activation=linear

# Downsample

[convolutional]
batch_normalize=1
filters=1024
size=3
stride=2
pad=1
activation=leaky

[convolutional]
batch_normalize=1
filters=512
size=1
stride=1
pad=1
activation=leaky

[convolutional]
batch_normalize=1
filters=1024
size=3
stride=1
pad=1
activation=leaky

[shortcut]
from=-3
activation=linear

[convolutional]
batch_normalize=1
filters=512
size=1
stride=1
pad=1
activation=leaky

[convolutional]
batch_normalize=1
filters=1024
size=3
stride=1
pad=1
activation=leaky

[shortcut]
from=-3
activation=linear

[convolutional]
batch_normalize=1
filters=512
size=1
stride=1
pad=1
activation=leaky

[convolutional]
batch_normalize=1
filters=1024
size=3
stride=1
pad=1
activation=leaky

[shortcut]
from=-3
activation=linear

[convolutional]
batch_normalize=1
filters=512
size=1
stride=1
pad=1
activation=leaky

[convolutional]
batch_normalize=1
filters=1024
size=3
stride=1
pad=1
activation=leaky

[shortcut]
from=-3
activation=linear

######################  75-end  ###

[convolutional]
batch_normalize=1
filters=512
size=1
stride=1
pad=1
activation=leaky

[convolutional]
batch_normalize=1
size=3
stride=1
pad=1
filters=1024
activation=leaky

[convolutional]
batch_normalize=1
filters=512
size=1
stride=1
pad=1
activation=leaky

[convolutional]
batch_normalize=1
size=3
stride=1
pad=1
filters=1024
activation=leaky

[convolutional]
batch_normalize=1
filters=512
size=1
stride=1
pad=1
activation=leaky

[convolutional]
batch_normalize=1
size=3
stride=1
pad=1
filters=1024
activation=leaky

[convolutional]
size=1
stride=1
pad=1
filters=504
activation=linear


[yolo]
mask = 144-215
anchors = 792, 2061, 3870, 6353, 9623, 15803 / 4.18, 6.48, 8.71  / -75, -60, -45, -30, -15 ,0,15, 30,45, 60,75, 90
classes=1
num=36
jitter=.3
ignore_thresh = .7
truth_thresh = 1
random=1


[route]
layers = -4

[convolutional]
batch_normalize=1
filters=256
size=1
stride=1
pad=1
activation=leaky

[upsample]
stride=2

[route]
layers = -1, 61



[convolutional]
batch_normalize=1
filters=256
size=1
stride=1
pad=1
activation=leaky

[convolutional]
batch_normalize=1
size=3
stride=1
pad=1
filters=512
activation=leaky

[convolutional]
batch_normalize=1
filters=256
size=1
stride=1
pad=1
activation=leaky

[convolutional]
batch_normalize=1
size=3
stride=1
pad=1
filters=512
activation=leaky

[convolutional]
batch_normalize=1
filters=256
size=1
stride=1
pad=1
activation=leaky

[convolutional]
batch_normalize=1
size=3
stride=1
pad=1
filters=512
activation=leaky

[convolutional]
size=1
stride=1
pad=1
filters=504
activation=linear


[yolo]
mask = 144-215
anchors = 792, 2061, 3870, 6353, 9623, 15803 / 4.18, 6.48, 8.71  / -75, -60, -45, -30, -15 ,0,15, 30,45, 60,75, 90
classes=1
num=36
jitter=.3
ignore_thresh = .7
truth_thresh = 1
random=1



[route]
layers = -4

[convolutional]
batch_normalize=1
filters=128
size=1
stride=1
pad=1
activation=leaky

[upsample]
stride=2

[route]
layers = -1, 36



[convolutional]
batch_normalize=1
filters=128
size=1
stride=1
pad=1
activation=leaky

[convolutional]
batch_normalize=1
size=3
stride=1
pad=1
filters=256
activation=leaky

[convolutional]
batch_normalize=1
filters=128
size=1
stride=1
pad=1
activation=leaky

[convolutional]
batch_normalize=1
size=3
stride=1
pad=1
filters=256
activation=leaky

[convolutional]
batch_normalize=1
filters=128
size=1
stride=1
pad=1
activation=leaky

[convolutional]
batch_normalize=1
size=3
stride=1
pad=1
filters=256
activation=leaky

[convolutional]
size=1
stride=1
pad=1
filters=504
activation=linear


[yolo]
mask = 0-71
anchors = 792, 2061, 3870, 6353, 9623, 15803 / 4.18, 6.48, 8.71  / -75, -60, -45, -30, -15 ,0,15, 30,45, 60,75, 90
classes=1
num=36
jitter=.3
ignore_thresh = .7
truth_thresh = 1
random=1


####### matrix feature #########
################ (6,6)  107-111  #############
[route]
layers = 79

[convolutional]
batch_normalize=1
filters=512
size=3
stride=2
pad=1
activation=leaky

[convolutional]
size=1
stride=1
pad=1
filters=1024
activation=leaky

[convolutional]
size=1
stride=1
pad=1
filters=504
activation=linear

[yolo]
mask = 144-215
anchors = 792, 2061, 3870, 6353, 9623, 15803 / 4.18, 6.48, 8.71  / -75, -60, -45, -30, -15 ,0,15, 30,45, 60,75, 90
classes=1
num=36
jitter=.3
ignore_thresh = .7
truth_thresh = 1
random=1


################ 115-125: 13*13  1*2  (117,121,125)  #############
[route]
layers = 74


[convolutional]
batch_normalize=1
filters=512
size=1
stride=1
pad=1
activation=leaky
weight_from = 75

[d-convolutional]
dilation=(1,2)
batch_normalize=1
size=3
stride=1
pad=1
filters=1024
activation=leaky
weight_from = 76


[convolutional]
batch_normalize=1
filters=512
size=1
stride=1
pad=1
activation=leaky
weight_from = 77

[d-convolutional]
dilation=(1,2)
batch_normalize=1
size=3
stride=1
pad=1
filters=1024
activation=leaky
weight_from = 78

[shortcut]
from=-3
activation=linear

[convolutional]
batch_normalize=1
filters=512
size=1
stride=1
pad=1
activation=leaky
weight_from = 79

[d-convolutional]
dilation=(1,2)
batch_normalize=1
size=3
stride=1
pad=1
filters=1024
activation=leaky
weight_from = 80

[shortcut]
from=-3
activation=linear

[convolutional]
size=1
stride=1
pad=1
filters=504
activation=linear
weight_from = 81

[yolo]
mask = 144-215
anchors = 792, 2061, 3870, 6353, 9623, 15803 / 4.18, 6.48, 8.71  / -75, -60, -45, -30, -15 ,0,15, 30,45, 60,75, 90
classes=1
num=36
jitter=.3
ignore_thresh = .7
truth_thresh = 1
random=1


################ 126-136: 13*13 2*1 (131,135,139)#############
[route]
layers = 74


[convolutional]
batch_normalize=1
filters=512
size=1
stride=1
pad=1
activation=leaky
weight_from = 75

[d-convolutional]
dilation=(2,1)
batch_normalize=1
size=3
stride=1
pad=1
filters=1024
activation=leaky
weight_from = 76


[convolutional]
batch_normalize=1
filters=512
size=1
stride=1
pad=1
activation=leaky
weight_from = 77

[d-convolutional]
dilation=(1,2)
batch_normalize=1
size=3
stride=1
pad=1
filters=1024
activation=leaky
weight_from = 78

[shortcut]
from=-3
activation=linear

[convolutional]
batch_normalize=1
filters=512
size=1
stride=1
pad=1
activation=leaky
weight_from = 79

[d-convolutional]
dilation=(1,2)
batch_normalize=1
size=3
stride=1
pad=1
filters=1024
activation=leaky
weight_from = 80

[shortcut]
from=-3
activation=linear

[convolutional]
size=1
stride=1
pad=1
filters=504
activation=linear
weight_from = 81

[yolo]
mask = 144-215
anchors = 792, 2061, 3870, 6353, 9623, 15803 / 4.18, 6.48, 8.71  / -75, -60, -45, -30, -15 ,0,15, 30,45, 60,75, 90
classes=1
num=36
jitter=.3
ignore_thresh = .7
truth_thresh = 1
random=1



################ 137-147: 26*26  1*2 #############
[route]
layers = 86


[convolutional]
batch_normalize=1
filters=256
size=1
stride=1
pad=1
activation=leaky
weight_from = 87

[d-convolutional]
dilation=(1,2)
batch_normalize=1
size=3
stride=1
pad=1
filters=512
activation=leaky
weight_from = 88

[convolutional]
batch_normalize=1
filters=256
size=1
stride=1
pad=1
activation=leaky
weight_from = 89

[d-convolutional]
dilation=(1,2)
batch_normalize=1
size=3
stride=1
pad=1
filters=512
activation=leaky
weight_from = 90

[shortcut]
from=-3
activation=linear

[convolutional]
batch_normalize=1
filters=256
size=1
stride=1
pad=1
activation=leaky
weight_from = 91

[d-convolutional]
dilation=(1,2)
batch_normalize=1
size=3
stride=1
pad=1
filters=512
activation=leaky
weight_from = 92

[shortcut]
from=-3
activation=linear

[convolutional]
size=1
stride=1
pad=1
filters=504
activation=linear
weight_from = 93


[yolo]
mask = 144-215
anchors = 792, 2061, 3870, 6353, 9623, 15803 / 4.18, 6.48, 8.71  / -75, -60, -45, -30, -15 ,0,15, 30,45, 60,75, 90
classes=1
num=36
jitter=.3
ignore_thresh = .7
truth_thresh = 1
random=1


################ 148-158: 26*26  2*1 #############
[route]
layers = 86


[convolutional]
batch_normalize=1
filters=256
size=1
stride=1
pad=1
activation=leaky
weight_from = 87

[d-convolutional]
dilation=(2,1)
batch_normalize=1
size=3
stride=1
pad=1
filters=512
activation=leaky
weight_from = 88

[convolutional]
batch_normalize=1
filters=256
size=1
stride=1
pad=1
activation=leaky
weight_from = 89

[d-convolutional]
dilation=(2,1)
batch_normalize=1
size=3
stride=1
pad=1
filters=512
activation=leaky
weight_from = 90

[shortcut]
from=-3
activation=linear

[convolutional]
batch_normalize=1
filters=256
size=1
stride=1
pad=1
activation=leaky
weight_from = 91

[d-convolutional]
dilation=(2,1)
batch_normalize=1
size=3
stride=1
pad=1
filters=512
activation=leaky
weight_from = 92

[shortcut]
from=-3
activation=linear

[convolutional]
size=1
stride=1
pad=1
filters=504
activation=linear
weight_from = 93

[yolo]
mask = 144-215
anchors = 792, 2061, 3870, 6353, 9623, 15803 / 4.18, 6.48, 8.71  / -75, -60, -45, -30, -15 ,0,15, 30,45, 60,75, 90
classes=1
num=36
jitter=.3
ignore_thresh = .7
truth_thresh = 1
random=1

################ 159-169: 26*26 1*4 (173,177.181) #############
[route]
layers = 86


[convolutional]
batch_normalize=1
filters=256
size=1
stride=1
pad=1
activation=leaky
weight_from = 87

[d-convolutional]
dilation=(1,4)
batch_normalize=1
size=3
stride=1
pad=1
filters=512
activation=leaky
weight_from = 88

[convolutional]
batch_normalize=1
filters=256
size=1
stride=1
pad=1
activation=leaky
weight_from = 89

[d-convolutional]
dilation=(1,4)
batch_normalize=1
size=3
stride=1
pad=1
filters=512
activation=leaky
weight_from = 90

[shortcut]
from=-3
activation=linear

[convolutional]
batch_normalize=1
filters=256
size=1
stride=1
pad=1
activation=leaky
weight_from = 91

[d-convolutional]
dilation=(1,4)
batch_normalize=1
size=3
stride=1
pad=1
filters=512
activation=leaky
weight_from = 92

[shortcut]
from=-3
activation=linear

[convolutional]
size=1
stride=1
pad=1
filters=504
activation=linear
weight_from = 93

[yolo]
mask = 144-215
anchors = 792, 2061, 3870, 6353, 9623, 15803 / 4.18, 6.48, 8.71  / -75, -60, -45, -30, -15 ,0,15, 30,45, 60,75, 90
classes=1
num=36
jitter=.3
ignore_thresh = .7
truth_thresh = 1
random=1


################ 170-180: 26*26 4*1 (187,191,195) #############
[route]
layers = 86

[convolutional]
batch_normalize=1
filters=256
size=1
stride=1
pad=1
activation=leaky
weight_from = 87

[d-convolutional]
dilation=(4,1)
batch_normalize=1
size=3
stride=1
pad=1
filters=512
activation=leaky
weight_from = 88

[convolutional]
batch_normalize=1
filters=256
size=1
stride=1
pad=1
activation=leaky
weight_from = 89

[d-convolutional]
dilation=(4,1)
batch_normalize=1
size=3
stride=1
pad=1
filters=512
activation=leaky
weight_from = 90

[shortcut]
from=-3
activation=linear

[convolutional]
batch_normalize=1
filters=256
size=1
stride=1
pad=1
activation=leaky
weight_from = 91

[d-convolutional]
dilation=(4,1)
batch_normalize=1
size=3
stride=1
pad=1
filters=512
activation=leaky
weight_from = 92

[shortcut]
from=-3
activation=linear

[convolutional]
size=1
stride=1
pad=1
filters=504
activation=linear
weight_from = 93

[yolo]
mask = 144-215
anchors = 792, 2061, 3870, 6353, 9623, 15803 / 4.18, 6.48, 8.71  / -75, -60, -45, -30, -15 ,0,15, 30,45, 60,75, 90
classes=1
num=36
jitter=.3
ignore_thresh = .7
truth_thresh = 1
random=1


################ 181-191: 52*52 1*2 #############
[route]
layers = 98

[convolutional]
batch_normalize=1
filters=128
size=1
stride=1
pad=1
activation=leaky
weight_from = 99

[d-convolutional]
dilation=(1,2)
batch_normalize=1
size=3
stride=1
pad=1
filters=256
activation=leaky
weight_from = 100

[convolutional]
batch_normalize=1
filters=128
size=1
stride=1
pad=1
activation=leaky
weight_from = 101

[d-convolutional]
dilation=(1,2)
batch_normalize=1
size=3
stride=1
pad=1
filters=256
activation=leaky
weight_from = 102

[shortcut]
from=-3
activation=linear

[convolutional]
batch_normalize=1
filters=128
size=1
stride=1
pad=1
activation=leaky
weight_from = 103

[d-convolutional]
dilation=(1,2)
batch_normalize=1
size=3
stride=1
pad=1
filters=256
activation=leaky
weight_from = 104

[shortcut]
from=-3
activation=linear

[convolutional]
size=1
stride=1
pad=1
filters=504
activation=linear
weight_from = 105

[yolo]
mask = 0-71
anchors = 792, 2061, 3870, 6353, 9623, 15803 / 4.18, 6.48, 8.71  / -75, -60, -45, -30, -15 ,0,15, 30,45, 60,75, 90
classes=1
num=36
jitter=.3
ignore_thresh = .7
truth_thresh = 1
random=1




################ 192-202: 52*52 2*1 #############
[route]
layers = 98

[convolutional]
batch_normalize=1
filters=128
size=1
stride=1
pad=1
activation=leaky
weight_from = 99

[d-convolutional]
dilation=(2,1)
batch_normalize=1
size=3
stride=1
pad=1
filters=256
activation=leaky
weight_from = 100

[convolutional]
batch_normalize=1
filters=128
size=1
stride=1
pad=1
activation=leaky
weight_from = 101

[d-convolutional]
dilation=(2,1)
batch_normalize=1
size=3
stride=1
pad=1
filters=256
activation=leaky
weight_from = 102

[shortcut]
from=-3
activation=linear

[convolutional]
batch_normalize=1
filters=128
size=1
stride=1
pad=1
activation=leaky
weight_from = 103

[d-convolutional]
dilation=(2,1)
batch_normalize=1
size=3
stride=1
pad=1
filters=256
activation=leaky
weight_from = 104

[shortcut]
from=-3
activation=linear

[convolutional]
size=1
stride=1
pad=1
filters=504
activation=linear
weight_from = 105

[yolo]
mask = 0-71
anchors = 792, 2061, 3870, 6353, 9623, 15803 / 4.18, 6.48, 8.71  / -75, -60, -45, -30, -15 ,0,15, 30,45, 60,75, 90
classes=1
num=36
jitter=.3
ignore_thresh = .7
truth_thresh = 1
random=1


################ 203-213: 52*52 1*4 #############
[route]
layers = 98

[convolutional]
batch_normalize=1
filters=128
size=1
stride=1
pad=1
activation=leaky
weight_from = 99

[d-convolutional]
dilation=(1,4)
batch_normalize=1
size=3
stride=1
pad=1
filters=256
activation=leaky
weight_from = 100

[convolutional]
batch_normalize=1
filters=128
size=1
stride=1
pad=1
activation=leaky
weight_from = 101

[d-convolutional]
dilation=(1,4)
batch_normalize=1
size=3
stride=1
pad=1
filters=256
activation=leaky
weight_from = 102

[shortcut]
from=-3
activation=linear

[convolutional]
batch_normalize=1
filters=128
size=1
stride=1
pad=1
activation=leaky
weight_from = 103

[d-convolutional]
dilation=(1,4)
batch_normalize=1
size=3
stride=1
pad=1
filters=256
activation=leaky
weight_from = 104

[shortcut]
from=-3
activation=linear

[convolutional]
size=1
stride=1
pad=1
filters=504
activation=linear
weight_from = 105

[yolo]
mask = 0-71
anchors = 792, 2061, 3870, 6353, 9623, 15803 / 4.18, 6.48, 8.71  / -75, -60, -45, -30, -15 ,0,15, 30,45, 60,75, 90
classes=1
num=36
jitter=.3
ignore_thresh = .7
truth_thresh = 1
random=1



################ 214-224: 52*52 4*1 #############
[route]
layers = 98

[convolutional]
batch_normalize=1
filters=128
size=1
stride=1
pad=1
activation=leaky
weight_from = 99

[d-convolutional]
dilation=(4,1)
batch_normalize=1
size=3
stride=1
pad=1
filters=256
activation=leaky
weight_from = 100

[convolutional]
batch_normalize=1
filters=128
size=1
stride=1
pad=1
activation=leaky
weight_from = 101

[d-convolutional]
dilation=(4,1)
batch_normalize=1
size=3
stride=1
pad=1
filters=256
activation=leaky
weight_from = 102

[shortcut]
from=-3
activation=linear

[convolutional]
batch_normalize=1
filters=128
size=1
stride=1
pad=1
activation=leaky
weight_from = 103

[d-convolutional]
dilation=(4,1)
batch_normalize=1
size=3
stride=1
pad=1
filters=256
activation=leaky
weight_from = 104

[shortcut]
from=-3
activation=linear

[convolutional]
size=1
stride=1
pad=1
filters=504
activation=linear
weight_from = 105

[yolo]
mask = 0-71
anchors = 792, 2061, 3870, 6353, 9623, 15803 / 4.18, 6.48, 8.71  / -75, -60, -45, -30, -15 ,0,15, 30,45, 60,75, 90
classes=1
num=36
jitter=.3
ignore_thresh = .7
truth_thresh = 1
random=1


################ 225-235: 52*52 1*8 (257,261,265) #############
[route]
layers = 98

[convolutional]
batch_normalize=1
filters=128
size=1
stride=1
pad=1
activation=leaky
weight_from = 99

[d-convolutional]
dilation=(1,8)
batch_normalize=1
size=3
stride=1
pad=1
filters=256
activation=leaky
weight_from = 100

[convolutional]
batch_normalize=1
filters=128
size=1
stride=1
pad=1
activation=leaky
weight_from = 101

[d-convolutional]
dilation=(1,8)
batch_normalize=1
size=3
stride=1
pad=1
filters=256
activation=leaky
weight_from = 102

[shortcut]
from=-3
activation=linear

[convolutional]
batch_normalize=1
filters=128
size=1
stride=1
pad=1
activation=leaky
weight_from = 103

[d-convolutional]
dilation=(1,8)
batch_normalize=1
size=3
stride=1
pad=1
filters=256
activation=leaky
weight_from = 104

[shortcut]
from=-3
activation=linear

[convolutional]
size=1
stride=1
pad=1
filters=504
activation=linear
weight_from = 105

[yolo]
mask = 0-71
anchors = 792, 2061, 3870, 6353, 9623, 15803 / 4.18, 6.48, 8.71  / -75, -60, -45, -30, -15 ,0,15, 30,45, 60,75, 90
classes=1
num=36
jitter=.3
ignore_thresh = .7
truth_thresh = 1
random=1


################ 236-246: 52*52 8*1 (271,275,279)#############
[route]
layers = 98

[convolutional]
batch_normalize=1
filters=128
size=1
stride=1
pad=1
activation=leaky
weight_from = 99

[d-convolutional]
dilation=(8,1)
batch_normalize=1
size=3
stride=1
pad=1
filters=256
activation=leaky
weight_from = 100

[convolutional]
batch_normalize=1
filters=128
size=1
stride=1
pad=1
activation=leaky
weight_from = 101

[d-convolutional]
dilation=(8,1)
batch_normalize=1
size=3
stride=1
pad=1
filters=256
activation=leaky
weight_from = 102

[shortcut]
from=-3
activation=linear

[convolutional]
batch_normalize=1
filters=128
size=1
stride=1
pad=1
activation=leaky
weight_from = 103

[d-convolutional]
dilation=(8,1)
batch_normalize=1
size=3
stride=1
pad=1
filters=256
activation=leaky
weight_from = 104

[shortcut]
from=-3
activation=linear

[convolutional]
size=1
stride=1
pad=1
filters=504
activation=linear
weight_from = 105

[yolo]
mask = 0-71
anchors = 792, 2061, 3870, 6353, 9623, 15803 / 4.18, 6.48, 8.71  / -75, -60, -45, -30, -15 ,0,15, 30,45, 60,75, 90
classes=1
num=36
jitter=.3
ignore_thresh = .7
truth_thresh = 1
random=1


